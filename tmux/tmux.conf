# Change bind key to ctrl-a
unbind-key c-b
set-option -g prefix c-a
unbind-key c-a
bind-key c-a send-prefix

# Index starts from 1
set-option -g base-index 1

# Enable mouse in tmux
set-option -g mouse on

# Renumber windows when a window is closed
set-option -g renumber-windows on

set -g display-time 4000

# True color
set-option -g default-terminal "screen-256color"
# set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

set -s escape-time 1

# Bigger history
set-option -g history-limit 10000

# Copy-mode
setw -g mode-keys vi

# Enable <S-Left> to work in tmuxed Vim
# set-window-option -g xterm-keys on

set -g status-keys vi

# New horisontal pane
# prefix |
bind-key | split-window -h -c "#{pane_current_path}"

# New vertical pane
# prefix -
bind-key - split-window -c "#{pane_current_path}"

# New window
# prefix c
bind-key c new-window -c "#{pane_current_path}"

# prefix a
bind-key a send-prefix

# Swap windows
bind-key -r > swap-window -t :+
bind-key -r < swap-window -t :-

unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
# unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection

# Resize panes
bind-key J resize-pane -D 10
bind-key K resize-pane -U 10
bind-key H resize-pane -L 10
bind-key L resize-pane -R 10

# Switch between current and previous session
bind-key Space switch-client -l

# Close panes/windows without confirmation
bind-key & kill-window
bind-key x kill-pane

# Reload config file from inside tmux
unbind r
bind-key r source-file ~/.tmux.conf \; display-message "Reloaded!"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
   | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Synchronize panes
bind-key * set-window-option synchronize-pane

## Capture pane and open in Vim
#bind-key C-t run 'tmux capture-pane -S -102400 -p > /tmp/tmux-capture.txt'\;\
#	     new-window "nvim /tmp/tmux-capture.txt"
## bind-key C-p run "screencapture -l$(osascript -e 'tell app \"iTerm\" to id of window 1') -x -o -P /tmp/$(date +%Y%m%d-%H%M%S).png"

## Clear screen like Cmd+K
## bind -n C-m send-keys C-l \; clear-history
## bind -n C-m if-shell "$is_shell" "send-keys C-l" "send-keys C-r"

## Load tmuxline theme
## source-file ~/dotfiles/tmuxline-snapshot

## Show active pane
## set-option -g pane-active-border-fg blue

set -g default-command /usr/local/bin/fish
set -g default-shell /usr/local/bin/fish
set -g status-right '#{prefix_highlight} | %a %Y-%m-%d %H:%M'
set -g focus-events on

# ------------------------------------------------------------------------------
# Plugins
# ------------------------------------------------------------------------------

# Init Tmux Plugin Manager
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# Themes
set -g @plugin 'jimeh/tmux-themepack'
set -g @themepack 'powerline/block/magenta'
# set -g @themepack 'powerline/block/yellow'

# Restore sessions after reboot
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -goqF @theme-window-status-current-fg "#000000"
set -goqF @theme-message-command-fg "#000000"
set -goqF @theme-mode-fg "#ffffff"
set -goqF @theme-window-status-current-fg "#000000"
set -goqF @theme-message-fg "#ffffff"


# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'

## https://superuser.com/questions/834525/unable-to-launch-application-in-tmux
## set-option -g default-command "reattach-to-user-namespace -l fish"
